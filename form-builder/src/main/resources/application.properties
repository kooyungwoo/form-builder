logging.level.root=info

spring.freemarker.template-loader-path=classpath:/templates 
spring.freemarker.prefix=/freemarker
spring.freemarker.suffix=.ftl
spring.freemarker.contentType=text/html
spring.freemarker.charset=UTF-8
#기본은 true (false로 설정 하는 경우 프리마커 변경 내용이 바로 적용 됨) 
spring.freemarker.cache=false

#폴빌더 테이블 생성시 dbUtils에서 사용하는 정보 spring.datasourcexxxx 설정에 맞춰서 수정 필요
formbuilder.dbutils.ip=localhost
formbuilder.dbutils.port=3306
formbuilder.dbutils.db-name=test_db
formbuilder.dbutils.db-type=MYSQL
formbuilder.dbutils.username=ZKu/LKf9DyGnJPAXqWW7uQ==
formbuilder.dbutils.password=kXjtcrMkTLitu2n0Y+1vdA==

#h2 console 활성화 및 경로 설정
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/test_db?characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.username=ENC(ZKu/LKf9DyGnJPAXqWW7uQ==)
spring.datasource.password=ENC(kXjtcrMkTLitu2n0Y+1vdA==) 

#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.url=jdbc:h2:~/test
#spring.datasource.username=sa
#spring.datasource.password=

spring.datasource2.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource2.url=jdbc:mysql://localhost:3306/test_db?characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource2.username=ENC(ZKu/LKf9DyGnJPAXqWW7uQ==)
spring.datasource2.password=ENC(kXjtcrMkTLitu2n0Y+1vdA==)

#spring.datasource2.driverClassName=org.h2.Driver
#spring.datasource2.url=jdbc:h2:~/test
#spring.datasource2.username=sa
#spring.datasource2.password=


#spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.datasource.dbcp2.validation-query=SELECT 1
#spring.jpa.show-sql=true
#spring.jpa.open-in-view=true

#hibernate 설정 sql 줄바꿈 등 보기 좋게 출력 설정(format_sql) 및 로그 출력(show_sql) 여부 sql설명 추가(use_sql_comments)
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.hibernate.ddl-auto=none

#jasypt 암호 key
jasypt.encryptor.password=m2
#jasypt에서 사용할 알고리즘
jasypt.encryptor.algorithm=PBEWithMD5AndDES
#jasypt에서 처리할 값의 시작
jasypt.encryptor.property.prefix=ENC(
#jasypt에서 처리할 값의 종료
jasypt.encryptor.property.suffix=)
#prefix, suffix으로 감싸지 데이터만 복호화 작업을 진행 하게 됩니다.

#톰켓 서비스 포트 변경
server.port=8081
#톰켓 8.x 이후부터는 스레드 처리를 BIO->NIO 으로 변경 해서 필요할때만 스레드를 할당받고 처리 하는 방식으로 변경되어 연결 세션하나가 하나의 스레드를 사용하는 방식이 아닙니다.
#적은 수의 스레드로 더 많은 요청을 처리 할 수 있습니다.
#생성할 수 있는 thread의 총 개수
server.tomcat.threads.max=256
#항상 활성화 되어있는(idle) thread의 개수
server.tomcat.threads.min-spare=10
#수립가능한 connection의 총 개수
server.tomcat.max-connections=8192
#작업큐의 사이즈(기본은 무한대기 억단위 설정임)
server.tomcat.accept-count=100
#timeout 판단 기준 시간, 36초
server.tomcat.connection-timeout=36000
#css,js파일 압축 서비스
server.compression.enabled=true